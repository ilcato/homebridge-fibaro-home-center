# Creates a new production release and publishes it to npm.

# The release will be marked as 'latest release'
# on GitHub and carry the 'latest' tag on npm.

name: Create and publish production release

on:
  release:
    types: [published]

jobs:
  create-release:
    if: "!github.event.release.prerelease"
    name: Create production release
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Show summary
        env:
          GITHUB_TOKEN: ${{secrets.GH_CLI_TOKEN}}
        run: |
          echo "The public release version will be: ${{ github.event.release.tag_name }}"

      - name: Check if (beta) version exists on npm
        id: check-beta
        run: |
          version=${{ github.event.release.tag_name }}
          package_exists=$(npm view .@$version version | wc -l | tr -d ' ')
          echo "package_exists=$package_exists" >> "$GITHUB_OUTPUT"

      - name: Publish to npm
        if: ${{ steps.check-beta.outputs.package_exists == 0}}
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        
        run: |
          npm version ${{ github.event.release.tag_name }}
          npm ci && npm run build
          npm publish

      - name: Tag existing version with 'latest'
        if: ${{ steps.check-beta.outputs.package_exists > 0 }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        run: |
          version=${{ github.event.release.tag_name }}
          npm dist-tag add homebridge-panasonic-ac-platform@$version latest
          npm dist-tag rm homebridge-panasonic-ac-platform@$version beta
